"use strict";io.sails.autoConnect=!1,angular.module("sails-tester",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","cgNotify","ui.bootstrap","ui.sortable","jsonFormatter"]).config(["$routeProvider","$provide",function(a,b){a.when("/",{redirectTo:"/connect"}).when("/connect",{templateUrl:"views/connect.html",controller:"ConnectCtrl"}).when("/request",{templateUrl:"views/request.html",controller:"RequestCtrl"}).when("/listener",{templateUrl:"views/listener.html",controller:"ListenerCtrl"}).otherwise({redirectTo:"/"}),b.decorator("accordionDirective",["$delegate",function(a){var b=a[0];return b.replace=!0,a}])}]).run(["notify",function(a){a.config({startTop:20,position:"right"})}]),angular.module("sails-tester").service("notificationService",["$rootScope","notify",function(a,b){return{warning:function(a){b({message:a,templateUrl:"views/notification/warning.html"})},success:function(a){b({message:a,templateUrl:"views/notification/success.html"})},info:function(a){b({message:a,templateUrl:"views/notification/information.html"})},error:function(a){b({message:a,templateUrl:"views/notification/error.html"})}}}]),angular.module("sails-tester").service("connectionService",["$rootScope",function(a){var b=null;return{connect:function(a){io.sails.url=a,io.sails.useCORSRouteToGetCookie=!0,b=io.sails.connect(),b.on("connect",function(){console.log("Successfully connected.")}),b.on("connecting",function(){console.log("connecting.")}),b.on("reconnect",function(){console.log("Successfully reconnected.")}),b.on("connect_error",function(){this.disconnect(),console.log("Connection error.")}),b.on("connect_failed",function(){this.disconnect(),console.log("Connection error.")}),b.on("error",function(){this.disconnect(),console.log("Connection error.")}),b.on("reconnect_failed",function(){console.log("Could not reconnect within specified reconnection attempts.")})},isConnected:function(){return null!==b?b.isConnected():!1},get:function(c,d,e){b.get(c,d,function(){var c=arguments;a.$apply(function(){e.apply(b,c)})})},post:function(c,d,e){b.post(c,d,function(){var c=arguments;a.$apply(function(){e.apply(b,c)})})},"delete":function(c,d,e){b.post(c,d,function(){var c=arguments;a.$apply(function(){e.apply(b,c)})})},put:function(c,d,e){b.post(c,d,function(){var c=arguments;a.$apply(function(){e.apply(b,c)})})},on:function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},off:function(a,c){b.off(a,c)},removeAllListeners:function(){b.removeAllListeners()}}}]),angular.module("sails-tester").controller("RequestCtrl",["$scope","$location","connectionService","notificationService","requests",function(a,b,c,d,e){c.isConnected()||b.path("/connect"),a.oneAtATime=!1,a.requestPath="",a.requestType="",a.requests=e,a.requestTypes=[{id:1,name:"GET"},{id:2,name:"POST"},{id:3,name:"PUT"},{id:4,name:"DELETE"}],a.sortableOptions={handle:" .handle"},a.sendRequest=function(a){var b={};if(a.active=!0,""!==a.parameters)try{b=JSON.parse(a.parameters)}catch(e){b={},d.warning("Invalid JSON syntax! Payload was ignored for "+a.type.name+" request on "+a.path)}c[a.type.name.toLowerCase()](a.path,b,function(b,c){var e=a.type.name+" on "+a.path+" returned with status code "+c.statusCode;200===c.statusCode?d.success(e):d.warning(e),a.response=c;var f={};try{f=JSON.parse(b),a.responseData=f}catch(g){a.responseData=b}a.active=!1})},a.removeRequest=function(b){a.requests.splice(b,1)},a.addRequest=function(){a.requests.splice(0,0,{path:a.requestPath,parameters:"",type:a.requestType,response:{},responseData:{},responseDataIsJSON:!0,panelOpen:!0,active:!1}),a.requestPath="",a.requestType=""}}]),angular.module("sails-tester").controller("ListenerCtrl",["$scope","$location","connectionService","notificationService","listeners",function(a,b,c,d,e){c.isConnected()||b.path("/connect"),a.oneAtATime=!1,a.listenerEvent="",a.listeners=e,a.sortableOptions={handle:" .handle"},a.removeListener=function(b){var d=a.listeners.splice(b,1);c.off(d.event,d.fn)},a.addListener=function(){var b={event:a.listenerEvent,response:{},panelOpen:!0};a.listeners.splice(0,0,b),c.on(a.listenerEvent,function(a){d.info('Listener with event "'+b.event+'" got triggered.'),b.response=a}),a.listenerEvent=""}}]),angular.module("sails-tester").controller("ConnectCtrl",["$scope","$location","notificationService","connectionService",function(a,b,c,d){function e(){c.success("Connection to "+a.serverAddress+" established."),b.path("/request")}function f(){c.error("Connection to "+a.serverAddress+" could not be established.")}a.serverAddress="",a.connectToServer=function(){d.connect(a.serverAddress),d.on("connect",e),d.on("connect_error",f)}}]),angular.module("sails-tester").controller("NavigationCtrl",["$scope","$location",function(a,b){a.items=[{path:"/connect",title:"Connect"},{path:"/request",title:"Request"},{path:"/listener",title:"Listener"}],a.isActive=function(a){return a.path==b.path()?!0:!1}}]),angular.module("sails-tester").factory("listeners",function(){return[]}),angular.module("sails-tester").factory("requests",function(){return[]});