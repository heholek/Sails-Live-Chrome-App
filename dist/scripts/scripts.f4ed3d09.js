"use strict";io.sails.autoConnect=!1,io.sails.useCORSRouteToGetCookie=!0,angular.module("sails-tester",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","cgNotify","ui.bootstrap","ui.sortable","jsonFormatter","angular-ladda"]).config(["$locationProvider","$routeProvider","$provide","$compileProvider","laddaProvider",function(a,b,c,d,e){d.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension):/),b.when("/",{redirectTo:"/connect"}).when("/connect",{templateUrl:"views/connect.html",controller:"ConnectCtrl"}).when("/connect/:url",{templateUrl:"views/connect.html",controller:"ConnectCtrl"}).when("/request",{templateUrl:"views/request.html",controller:"RequestCtrl"}).when("/listener",{templateUrl:"views/listener.html",controller:"ListenerCtrl"}).otherwise({redirectTo:"/"}),c.decorator("accordionDirective",["$delegate",function(a){var b=a[0];return b.replace=!0,a}]),e.setOption({style:"expand-left"})}]).run(["notify",function(a){a.config({startTop:20,position:"right"})}]),angular.module("sails-tester").service("notificationService",["$rootScope","notify",function(a,b){return{warning:function(a){b({message:a,templateUrl:"views/notification/warning.html"})},success:function(a){b({message:a,templateUrl:"views/notification/success.html"})},info:function(a){b({message:a,templateUrl:"views/notification/information.html"})},error:function(a){b({message:a,templateUrl:"views/notification/error.html"})}}}]),angular.module("sails-tester").service("connectionService",["$rootScope","notificationService",function(a,b){function c(){null!==d&&d.isConnected()&&(d.disconnect(),f=!1)}var d=null,e=!0,f=!1,g=[];return{isReconnect:function(){return f},connect:function(a,h){e=!0;for(var i=0;i<g.length;++i)if(g[i].indexOf(a)>-1)return void("function"==typeof h&&h());g.push(a),io.sails.useCORSRouteToGetCookie=!1,null!==d&&c(),d=io.sails.connect(a,{transports:["websocket"]}),d.on("connect",function(){e=!1,b.success("Connection to "+d.url+" established")}),d.on("reconnecting",function(){f=!0,b.info("Trying to reconnect to "+d.url)}),d.on("reconnect",function(){f=!0}),d.on("disconnect",function(){b.warning("Disconnected from "+d.url)}),d.on("connect_error",function(){e&&this.disconnect()}),d.on("connect_failed",function(){this.disconnect(),b.error("Connection failed")}),d.on("error",function(){this.disconnect(),b.error("Socket error")}),d.on("reconnect_failed",function(){this.disconnect(),b.error("Reconnection failed - Aborting")})},isConnected:function(){return null!==d?d.isConnected():!1},get:function(b,c,e){this.isConnected()&&d.get(b,c,function(){var b=arguments;a.$apply(function(){e.apply(d,b)})})},post:function(b,c,e){this.isConnected()&&d.post(b,c,function(){var b=arguments;a.$apply(function(){e.apply(d,b)})})},"delete":function(b,c,e){this.isConnected()&&d["delete"](b,c,function(){var b=arguments;a.$apply(function(){e.apply(d,b)})})},put:function(b,c,e){this.isConnected()&&d.put(b,c,function(){var b=arguments;a.$apply(function(){e.apply(d,b)})})},on:function(b,c){null!==d&&d.on(b,function(){var b=arguments;a.$apply(function(){c.apply(d,b)})})},url:function(){return null!==d?d.url:"http://nosocket"},removeAllListeners:function(){null!==d&&d.removeAllListeners()}}}]),angular.module("sails-tester").factory("storage",["$q",function(a){return{get:function(b){var c=a.defer();return chrome.storage.local.get(b,function(a){c.resolve(a[b])}),c.promise},set:function(b,c){var d=a.defer(),e={};return e[b]=c,chrome.storage.local.set(e,function(){d.resolve({})}),d.promise},del:function(b){var c=a.defer();return chrome.storage.local.remove(b,function(){c.resolve({})}),c.promise},isAvailable:function(){return"undefined"!=typeof chrome&&chrome.hasOwnProperty("storage")}}}]),angular.module("sails-tester").controller("RequestCtrl",["$scope","$location","connectionService","notificationService","requests","storage",function(a,b,c,d,e,f){function g(){f.isAvailable()&&f.set("requests."+c.url(),a.requests)}c.isConnected()||b.path("/connect"),f.isAvailable()?f.get("requests."+c.url()).then(function(b){a.requests="undefined"==typeof b?[]:b}):a.requests=e,a.connected=!0,a.oneAtATime=!1,a.requestPath="",a.requestType="",a.requestTypes=[{id:1,name:"GET"},{id:2,name:"POST"},{id:3,name:"PUT"},{id:4,name:"DELETE"}],a.sortableOptions={handle:" .handle"},c.on("connect",function(){a.connected=!0}),c.on("disconnect",function(){a.connected=!1}),a.jsonCheck=function(a){if(""===a.payload)return void(a.invalidJSONPayload=!1);try{JSON.parse(a.payload),a.invalidJSONPayload=!1}catch(b){return void(a.invalidJSONPayload=!0)}},a.sendRequest=function(a){var b={};if(a.active=!0,a.invalidJSONPayload)d.warning("Invalid JSON syntax! Payload was ignored for "+a.type+" request on "+a.path);else if(""!==a.payload)try{b=JSON.parse(a.payload)}catch(e){b={}}console.log(a),c[a.type.toLowerCase()](a.path,b,function(b,c){var e=a.type+" on "+a.path+" returned with status code "+c.statusCode;200===c.statusCode?d.success(e):d.warning(e),a.response=c.toPOJO(),a.active=!1,g()})},a.removeRequest=function(b){a.requests.splice(b,1),g()},a.addRequest=function(){a.requests.splice(0,0,{path:a.requestPath,payload:"",type:a.requestType.name,response:!1,panelOpen:!0,active:!1,invalidJSONPayload:!1}),a.requestPath="",a.requestType="",g()}}]),angular.module("sails-tester").controller("ListenerCtrl",["$scope","$location","connectionService","notificationService","listeners","storage",function(a,b,c,d,e,f){function g(){f.isAvailable()&&f.set("listeners."+c.url(),a.listeners)}function h(){c.removeAllListeners();for(var b=0;b<a.listeners.length;++b){var e=a.listeners[b];c.on(e.event,function(a){d.info('Listener with event "'+e.event+'" got triggered.'),e.response=a,g()})}}c.isConnected()||b.path("/connect"),f.isAvailable()?f.get("listeners."+c.url()).then(function(b){a.listeners="undefined"==typeof b?[]:b,h()}):(a.listeners=e,h()),a.oneAtATime=!1,a.listenerEvent="",a.sortableOptions={handle:" .handle"},a.removeListener=function(b){a.listeners.splice(b,1),h(),g()},a.eventChange=function(){h()},a.addListener=function(){var b={event:a.listenerEvent,response:!1,panelOpen:!0};a.listeners.splice(0,0,b),c.on(b.event,function(a){d.info('Listener with event "'+b.event+'" got triggered.'),b.response=a,g()}),a.listenerEvent="",g()}}]),angular.module("sails-tester").controller("ConnectCtrl",["$window","$scope","$location","storage","notificationService","connectionService","$timeout","$routeParams","$route",function(a,b,c,d,e,f,g,h){function i(){b.urlUsed=!1,null!==j&&g.cancel(j),d.isAvailable()&&!f.isReconnect()&&d.get("listeners."+f.url()).then(function(a){if("undefined"!=typeof a){f.removeAllListeners();for(var b=0;b<a.length;++b){var c=a[b];f.on(c.event,function(a){e.info('Listener with event "'+c.event+'" got triggered.'),d.get("listeners."+f.url()).then(function(b){for(var e=0;e<b.length;++e)b[e].event===c.event&&(b[e].response=a);d.set("listeners."+f.url(),b)})})}}}),c.path().indexOf("connect")>-1&&g(function(){b.loginLoading=!1,c.path("/request")},500)}b.serverAddress="undefined"!=typeof h.url?h.url:"",b.loginLoading=!1,b.urlUsed=!1;var j=null;b.connectToServer=function(){b.loginLoading=!0,f.connect(b.serverAddress,function(){b.urlUsed=!0}),f.on("connect",i),j=g(function(){e.error("Can not connect to "+b.serverAddress),b.loginLoading=!1},3e3)}}]),angular.module("sails-tester").controller("NavigationCtrl",["$scope","$location",function(a,b){a.items=[{path:"/connect",title:"Connect"},{path:"/request",title:"Request"},{path:"/listener",title:"Listener"}],a.isActive=function(a){return a.path==b.path()?!0:!1}}]),angular.module("sails-tester").factory("listeners",function(){return[]}),angular.module("sails-tester").factory("requests",function(){return[]});